<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>泡沫</title>
  
  <subtitle>技术与生活的安放处</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://idcpj.github.io/"/>
  <updated>2019-02-14T09:40:11.208Z</updated>
  <id>http://idcpj.github.io/</id>
  
  <author>
    <name>idcpj</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>yaml配置文件用法</title>
    <link href="http://idcpj.github.io/2019/02/14/yaml%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%94%A8%E6%B3%95/"/>
    <id>http://idcpj.github.io/2019/02/14/yaml配置文件用法/</id>
    <published>2019-02-14T09:36:41.000Z</published>
    <updated>2019-02-14T09:40:11.208Z</updated>
    
    <content type="html"><![CDATA[<p>介绍 yaml 的一些基本用法  <a id="more"></a></p><h2 id="语法规则"><a href="#语法规则" class="headerlink" title="语法规则"></a>语法规则</h2><ul><li>大小写敏感</li><li>缩进时不允许使用Tab键，只允许使用空格。</li><li>缩进的空格数目不重要，只要相同层级的元素左侧对齐即可</li><li>表示注释，从这个字符一直到行尾，都会被解析器忽略。</li></ul><h2 id="支持数据格式"><a href="#支持数据格式" class="headerlink" title="支持数据格式"></a>支持数据格式</h2><ul><li>对象：键值对的集合，又称为映射（mapping）/ 哈希（hashes） / 字典（dictionary）</li><li>数组：一组按次序排列的值，又称为序列（sequence） / 列表（list）</li><li>纯量（scalars）：单个的、不可再分的值</li></ul><h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><p><code>animal: pets</code>  ⬇ <code>{ animal: &#39;pets&#39; }</code><br>采用行内对象<br><code>hash: { name: Steve, foo: bar }</code>  ⬇ <code>{ hash: { name: &#39;Steve&#39;, foo: &#39;bar&#39; } }</code></p><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><ol><li><p>用连线开头的表示数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- Cat</span><br><span class="line">- Dog</span><br><span class="line">- Goldfish</span><br></pre></td></tr></table></figure><p> ⬇<br><code>[ &#39;Cat&#39;, &#39;Dog&#39;, &#39;Goldfish&#39; ]</code></p></li></ol><ol start="2"><li><p>多为数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-</span><br><span class="line"> - Cat</span><br><span class="line"> - Dog</span><br><span class="line"> - Goldfish</span><br></pre></td></tr></table></figure><p>⬇<br><code>[ [ &#39;Cat&#39;, &#39;Dog&#39;, &#39;Goldfish&#39; ] ]</code></p></li></ol><ol start="3"><li>数组也可以采用行内表示法<br><code>animal: [Cat, Dog]</code><br>⬇<br><code>{ animal: [ &#39;Cat&#39;, &#39;Dog&#39; ] }</code></li></ol><h3 id="复合结构"><a href="#复合结构" class="headerlink" title="复合结构"></a>复合结构</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">languages:</span><br><span class="line"> - Ruby</span><br><span class="line"> - Perl</span><br><span class="line"> - Python </span><br><span class="line">websites:</span><br><span class="line"> YAML: yaml.org </span><br><span class="line"> Ruby: ruby-lang.org </span><br><span class="line"> Python: python.org </span><br><span class="line"> Perl: use.perl.org</span><br></pre></td></tr></table></figure><p>⬇<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">languages: [</span><br><span class="line">&apos;Ruby&apos;,</span><br><span class="line">&apos;Perl&apos;,</span><br><span class="line">&apos;Python&apos;</span><br><span class="line">],</span><br><span class="line">websites: &#123;</span><br><span class="line">YAML: &apos;yaml.org&apos;,</span><br><span class="line">Ruby: &apos;ruby-lang.org&apos;,</span><br><span class="line">Python: &apos;python.org&apos;,</span><br><span class="line">Perl: &apos;use.perl.org&apos;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="纯量"><a href="#纯量" class="headerlink" title="纯量"></a>纯量</h2><p>不可再分的元素</p><ul><li>字符串</li><li>布尔值  <code>isSet: true</code>  -&gt; js <code>{isSet: true}</code></li><li>整数</li><li>浮点数   <code>number: 12.30</code>  -&gt;js <code>{number:12.30}</code></li><li>Null    <code>parent: ~</code>  -&gt; <code>{parent:null}</code></li><li>时间 <code>iso8601: 2001-12-14t21:59:43.10-05:00</code>  -&gt;js <code>{ iso8601: new Date(&#39;2001-12-14t21:59:43.10-05:00&#39;) }</code></li><li>日期  <code>date: 1976-07-31</code> -&gt; js <code>{ date: new Date(&#39;1976-07-31&#39;) }</code></li></ul><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><ol><li>双引号不会对特殊字符转义<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s1: &apos;内容\n字符串&apos;</span><br><span class="line">s2: &quot;内容\n字符串&quot;</span><br></pre></td></tr></table></figure></li></ol><p>⬇<br><code>{ s1: &#39;内容\\n字符串&#39;, s2: &#39;内容\n字符串&#39; }</code></p><ol start="2"><li>字符串可以写成多行，从第二行开始，必须有一个单空格缩进。换行符会被转为空格<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">str: 这是一段</span><br><span class="line">  多行</span><br><span class="line">  字符串</span><br></pre></td></tr></table></figure></li></ol><p>⬇<br><code>{ str: &#39;这是一段 多行 字符串&#39; }</code></p><ol start="3"><li>多行字符串可以使用|保留换行符，也可以使用&gt;折叠换行<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">this: |</span><br><span class="line">  Foo</span><br><span class="line">  Bar</span><br><span class="line">that: &gt;</span><br><span class="line">  Foo</span><br><span class="line">  Bar</span><br></pre></td></tr></table></figure></li></ol><p>⬇<br><code>{ this: &#39;Foo\nBar\n&#39;, that: &#39;Foo Bar\n&#39; }</code></p><ol start="4"><li>+表示保留文字块末尾的换行，-表示删除字符串末尾的换行<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">s1: |</span><br><span class="line">  Foo</span><br><span class="line">s2: |+</span><br><span class="line">  Foo</span><br><span class="line">s3: |-</span><br><span class="line">  Fo</span><br></pre></td></tr></table></figure></li></ol><p>⬇<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; s1: &apos;Foo\n&apos;, s2: &apos;Foo\n\n\n&apos;, s3: &apos;Foo&apos; &#125;</span><br></pre></td></tr></table></figure></p><h3 id="强制转换数据类型"><a href="#强制转换数据类型" class="headerlink" title="强制转换数据类型"></a>强制转换数据类型</h3><p>使用两个 <code>!!</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">e: !!str 123</span><br><span class="line">f: !!str true</span><br></pre></td></tr></table></figure></p><p>⬇<br><code>{e:&quot;123&quot;,f:&quot;true&quot;}</code></p><p>转载请说明出处 <a href="http://idcpj.github.io/2019/02/14/yaml配置文件用法/">http://idcpj.github.io/2019/02/14/yaml配置文件用法/</a> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;介绍 yaml 的一些基本用法
    
    </summary>
    
      <category term="技术" scheme="http://idcpj.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="yaml" scheme="http://idcpj.github.io/tags/yaml/"/>
    
  </entry>
  
  <entry>
    <title>如何写一篇hexo的文章</title>
    <link href="http://idcpj.github.io/2019/02/13/%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E7%AF%87hexo%E7%9A%84%E6%96%87%E7%AB%A0/"/>
    <id>http://idcpj.github.io/2019/02/13/如何写一篇hexo的文章/</id>
    <published>2019-02-13T02:37:16.000Z</published>
    <updated>2019-02-14T09:23:24.312Z</updated>
    
    <content type="html"><![CDATA[<p>介绍如何用 markdown 的语法结合 hexo 的标签 写文章<br><a id="more"></a></p><h3 id="文章截断"><a href="#文章截断" class="headerlink" title="文章截断"></a>文章截断</h3><p>在需要截断的地方使用<code>&lt;!--more--&gt;</code></p><h3 id="创建hexo的"><a href="#创建hexo的" class="headerlink" title="创建hexo的"></a>创建hexo的</h3><p><code>hexo new [post] 文章标题</code></p><h3 id="设置Front-matter"><a href="#设置Front-matter" class="headerlink" title="设置Front-matter"></a>设置Front-matter</h3><p>在文章的 <code>---</code> 分割的区域就是 Front-matter</p><h3 id="可设置如下参数"><a href="#可设置如下参数" class="headerlink" title="可设置如下参数"></a>可设置如下参数</h3><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>layout</td><td>布局</td><td></td></tr><tr><td>title</td><td>标题</td><td></td></tr><tr><td>date</td><td>建立日期</td><td>文件建立日期</td></tr><tr><td>updated</td><td>更新日期</td><td>文件更新日期</td></tr><tr><td>comments</td><td>开启文章的评论功能</td><td>true</td></tr><tr><td>tags</td><td>标签</td><td>（不适用于分页）</td></tr><tr><td>categories</td><td>分类</td><td>（不适用于分页）</td></tr><tr><td>permalink</td><td>覆盖文章网址</td><td></td></tr><tr><td>donate</td><td>开启打赏</td></tr></tbody></table><h3 id="分类和标签"><a href="#分类和标签" class="headerlink" title="分类和标签"></a>分类和标签</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">- Diary</span><br><span class="line">tags:</span><br><span class="line">- PS3</span><br><span class="line">- Games</span><br></pre></td></tr></table></figure><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote Seth Godin  %&#125;</span><br><span class="line">Every interaction is both precious and an opportunity to delight.</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><p>显示:<br><blockquote><p>Every interaction is both precious and an opportunity to delight.</p><footer><strong>Seth Godin</strong></footer></blockquote></p><h3 id="函数演示"><a href="#函数演示" class="headerlink" title="函数演示"></a>函数演示</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123; % codeblock Array.map %&#125;</span><br><span class="line">array.map(callback[, thisArg])</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><p>显示:<br><figure class="highlight plain"><figcaption><span>Array.map</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array.map(callback[, thisArg])</span><br></pre></td></tr></table></figure></p><h3 id="iframe"><a href="#iframe" class="headerlink" title="iframe"></a>iframe</h3><p><code>{ % iframe url [width] [height] % }</code></p><h3 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h3><p><code>{ % img [class names] /path/to/image [width] [height] [title text [alt text]] %}</code></p><img src="/image/demo.png" width="76" height="66" title="底部图片描述 alt文字描述"><h3 id="参考资料的书写方式"><a href="#参考资料的书写方式" class="headerlink" title="参考资料的书写方式"></a>参考资料的书写方式</h3><p><code>1.[doc name   (英文)](http://www.demo.com)</code><br>eg:     1. <a href="https://zh.wikipedia.org/wiki/%E8%BD%BB%E5%9E%8B%E7%9B%AE%E5%BD%95%E8%AE%BF%E9%97%AE%E5%8D%8F%E8%AE%AE" target="_blank" rel="noopener">LDAP 轻型目录访问协议 wiki (英文文)</a></p><p>转载请说明出处 <a href="http://idcpj.github.io/2019/02/13/如何写一篇hexo的文章/">http://idcpj.github.io/2019/02/13/如何写一篇hexo的文章/</a> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;介绍如何用 markdown 的语法结合 hexo 的标签 写文章&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://idcpj.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
</feed>
