<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>泡沫</title>
  
  <subtitle>技术与生活的安放处</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://idcpj.github.io/"/>
  <updated>2019-03-13T02:59:29.942Z</updated>
  <id>http://idcpj.github.io/</id>
  
  <author>
    <name>idcpj</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>拖拉插件</title>
    <link href="http://idcpj.github.io/2019/03/13/%E6%8B%96%E6%8B%89%E6%8F%92%E4%BB%B6/"/>
    <id>http://idcpj.github.io/2019/03/13/拖拉插件/</id>
    <published>2019-03-13T01:08:54.000Z</published>
    <updated>2019-03-13T02:59:29.942Z</updated>
    
    <content type="html"><![CDATA[<p>多数js的新手对交互效果的研究一直都处于拿来用阶段,本文通过对拖拉的交互研究,来试探下js的交互方式</p><a id="more"></a><h2 id="拖拉事件"><a href="#拖拉事件" class="headerlink" title="拖拉事件"></a>拖拉事件</h2><p>在网页交中,拖拉事件是非常常见的,如对列表进行排序等操作,用拖拉事件会非常人性化.那么交互事件分为哪些阶段呢</p><h3 id="拖拉-DOM"><a href="#拖拉-DOM" class="headerlink" title="拖拉 DOM"></a>拖拉 DOM</h3><p>需要拖拉的目标一共有三个事件:</p><p><code>event</code>的<code>target</code>属性来获取拖拉的 DOM 信息</p><ol><li><code>drag</code> 拖拉过程中,持续触发的事件(相隔几百毫秒)</li><li><code>dragstart</code> 开始拖拉时触发,可通过回调函数中</li><li><code>dragend</code> 结束拖拉时候触发</li></ol><h3 id="目标-DOM"><a href="#目标-DOM" class="headerlink" title="目标 DOM"></a>目标 DOM</h3><p><code>target</code>属性是当前目标 DOM </p><ol><li><code>dragenter</code> 当拖拉 DOM 进入目标 DOM 时触发</li><li><code>dragover</code> 进入目标 DOM 上方,持续触发</li><li><code>dragleave</code> 离开目标 DOM 时触发</li><li><code>drop</code> 被拖拉的 DOM 释放到目标 DOM 时触发</li></ol><h2 id="简单的拖拉事件"><a href="#简单的拖拉事件" class="headerlink" title="简单的拖拉事件"></a>简单的拖拉事件</h2><p>本代码来自阮一峰的教程</p><script async src="//jsrun.net/y3XKp/embed/all/light/"></script><p>若操作无效,请复制到本地操作</p><p>此案例有很多需要优化的地方,比如变量对全局造成污染,无法复用,回调函数设置复杂等</p><h2 id="制作成插件"><a href="#制作成插件" class="headerlink" title="制作成插件"></a>制作成插件</h2><p>学习一个新的js知识,最好的方法就是把他们制作成插件.这样既有一个可用的组件能用,且可以更好的掌握不通知识对针对插件的优化</p><p><script async src="//jsrun.net/23XKp/embed/all/light/"></script><br>若操作无效,请复制到本地操作</p><p>有两种调用方式:</p><p>一种是不需要调用函数<br><code>drop(&#39;.dropzone&#39;,&#39;.draggable&#39;);</code><br>参数一位可放置区域,参数二为可拖拽区域</p><p>第二种可设置回调函数,毕竟需求千奇百怪,没有回调怎么可以.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">drop(<span class="string">'.dropzone'</span>,<span class="string">'.draggable'</span>,&#123;</span><br><span class="line">    drag:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        e.target.style.backgroundColor=<span class="string">'#ccc'</span>;</span><br><span class="line">        e.target.style.opacity=<span class="number">0.5</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    dragstart:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        e.target.style.backgroundColor=<span class="string">'red'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    dragend:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        e.target.style.backgroundColor=<span class="string">''</span>;</span><br><span class="line">        e.target.style.opacity=<span class="string">''</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    dragenter:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        e.target.style.backgroundColor = <span class="string">'blue'</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    dragover:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        e.target.style.backgroundColor=<span class="string">'green'</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    dragleave:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        e.target.style.backgroundColor=<span class="string">''</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    drop:<span class="function"><span class="keyword">function</span> (<span class="params">e,node</span>) </span>&#123;</span><br><span class="line">        node.parentNode.removeChild(node);</span><br><span class="line">        e.target.appendChild(node);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://wangdoc.com/javascript/events/drag.html#%E6%8B%96%E6%8B%89%E4%BA%8B%E4%BB%B6%E7%9A%84%E7%A7%8D%E7%B1%BB" target="_blank" rel="noopener">拖拉事件 (阮一峰) </a></li></ol><p>转载请说明出处 <a href="http://idcpj.github.io/2019/03/13/拖拉插件/">http://idcpj.github.io/2019/03/13/拖拉插件/</a> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;多数js的新手对交互效果的研究一直都处于拿来用阶段,本文通过对拖拉的交互研究,来试探下js的交互方式&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>生成不同压缩比例的图片</title>
    <link href="http://idcpj.github.io/2019/02/19/%E7%94%9F%E6%88%90%E4%B8%8D%E5%90%8C%E5%8E%8B%E7%BC%A9%E6%AF%94%E4%BE%8B%E7%9A%84%E5%9B%BE%E7%89%87/"/>
    <id>http://idcpj.github.io/2019/02/19/生成不同压缩比例的图片/</id>
    <published>2019-02-19T06:00:44.000Z</published>
    <updated>2019-02-19T06:10:00.422Z</updated>
    
    <content type="html"><![CDATA[<p>适用于需要 ios 或者安卓对同张图片需要进行1倍,2倍,3倍比例的缩放.或者指定缩放倍数</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>项目地址 :<a href="https://github.com/idcpj/zoom_img" target="_blank" rel="noopener">https://github.com/idcpj/zoom_img</a></p><ul><li>python3</li><li>pip install Image</li></ul><h2 id="安装测试"><a href="#安装测试" class="headerlink" title="安装测试"></a>安装测试</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; cd test</span><br><span class="line">&gt; python create_img.py</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python create_img.py</span><br></pre></td></tr></table></figure><p>缩放可以使用使用分数形式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 请输入缩小倍数</span><br><span class="line">&gt; 1/9</span><br></pre></td></tr></table></figure></p><p>转载请说明出处 <a href="http://idcpj.github.io/2019/02/19/生成不同压缩比例的图片/">http://idcpj.github.io/2019/02/19/生成不同压缩比例的图片/</a> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;适用于需要 ios 或者安卓对同张图片需要进行1倍,2倍,3倍比例的缩放.或者指定缩放倍数&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://idcpj.github.io/categories/python/"/>
    
    
      <category term="ios" scheme="http://idcpj.github.io/tags/ios/"/>
    
      <category term="android" scheme="http://idcpj.github.io/tags/android/"/>
    
      <category term="移动端" scheme="http://idcpj.github.io/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
      <category term="python" scheme="http://idcpj.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>css3动画</title>
    <link href="http://idcpj.github.io/2019/02/15/css3%E5%8A%A8%E7%94%BB/"/>
    <id>http://idcpj.github.io/2019/02/15/css3动画/</id>
    <published>2019-02-15T05:34:23.000Z</published>
    <updated>2019-02-15T07:44:02.015Z</updated>
    
    <content type="html"><![CDATA[<p>css3 的出现可以让我们不依赖 javascript 做一些相对复杂的动画<br><a id="more"></a></p><h2 id="transition"><a href="#transition" class="headerlink" title="transition"></a>transition</h2><h3 id="最简单的入门动画"><a href="#最简单的入门动画" class="headerlink" title="最简单的入门动画"></a>最简单的入门动画</h3><p>在需要作用的 DOM 上添加 <code>transition: 1s;</code><br>实例:</p><script async src="//jsrun.net/9XXKp/embed/all/light/"></script><h3 id="指定长宽的动画时间"><a href="#指定长宽的动画时间" class="headerlink" title="指定长宽的动画时间"></a>指定长宽的动画时间</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.demo&#123;</span><br><span class="line">    transition: 1s height, 1s width;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实例:</p><script async src="//jsrun.net/QXXKp/embed/all/light/"></script><h3 id="指定延迟时间-transition-delay"><a href="#指定延迟时间-transition-delay" class="headerlink" title="指定延迟时间 (transition-delay)"></a>指定延迟时间 (transition-delay)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.demo&#123;</span><br><span class="line">    transition: 1s height, 1s 1s width; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>delay 可以指定动画的运行顺序</p></blockquote><script async src="//jsrun.net/zXXKp/embed/all/light/"></script><h3 id="指定状态变化速度-transition-timing-function"><a href="#指定状态变化速度-transition-timing-function" class="headerlink" title="指定状态变化速度 (transition-timing-function)"></a>指定状态变化速度 (transition-timing-function)</h3><p>默认为 ease</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.demo&#123;</span><br><span class="line">    transition: 1s [widht|height] ease;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>ease:逐渐放慢 (默认)</li><li>linear：匀速 </li><li>ease-in：加速</li><li>ease-out：减速 </li><li>cubic-bezier函数：自定义速度模式</li></ol><blockquote><p>cubic-bezier 可用<a href="http://cubic-bezier.com/" target="_blank" rel="noopener">cubic-bezier</a> 工具进行调整</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.demo&#123;</span><br><span class="line">    transition: 1s height cubic-bezier(.87,-0.51,.84,.09);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="完整表达式"><a href="#完整表达式" class="headerlink" title="完整表达式"></a>完整表达式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.demo&#123;</span><br><span class="line">    transition: 1s [1s] [height] [ease];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.demo&#123;</span><br><span class="line">    transition-property: height;</span><br><span class="line">    transition-duration: 1s;</span><br><span class="line">    transition-delay: 1s;</span><br><span class="line">    transition-timing-function: ease;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ol><li>IE10+ ,chrome 等都支持</li><li>如何 长宽属性是<code>auto</code>,则无法计算出中间状态</li><li>transition 需要时间出发,无法在加载网页时候自动发生</li><li>transition 只有开始和结束两种状态</li><li>transition 一条transition规则，只能定义一个属性的变化，不能涉及多个属性</li></ol><blockquote><p><a href="http://leaverou.github.io/animatable/" target="_blank" rel="noopener">各个属性的动画效果</a></p></blockquote><script async src="//jsrun.net/7XXKp/embed/all/light/"></script><h2 id="CSS-Animation"><a href="#CSS-Animation" class="headerlink" title="CSS Animation"></a>CSS Animation</h2><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">div:hover &#123;</span><br><span class="line">   animation: 1s rainbow;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line">@keyframes rainbow &#123;</span><br><span class="line">   0% &#123;</span><br><span class="line">     background: #c00;</span><br><span class="line">   &#125;</span><br><span class="line">   50% &#123;</span><br><span class="line">     background: orange;</span><br><span class="line">   &#125;</span><br><span class="line">   100% &#123;</span><br><span class="line">     background: yellowgreen;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><script async src="//jsrun.net/dXXKp/embed/all/light/"></script><h3 id="可以无限制播放"><a href="#可以无限制播放" class="headerlink" title="可以无限制播放"></a>可以无限制播放</h3><p><code>animation: 1s rainbow infinite;</code></p><h3 id="指定播放次数"><a href="#指定播放次数" class="headerlink" title="指定播放次数"></a>指定播放次数</h3><p><code>animation: 1s rainbow 3;</code></p><h3 id="动画保持结束状态"><a href="#动画保持结束状态" class="headerlink" title="动画保持结束状态"></a>动画保持结束状态</h3><p><code>animation: 1s rainbow forwards;</code></p><h3 id="播放方向"><a href="#播放方向" class="headerlink" title="播放方向"></a>播放方向</h3><p><code>animation: 1s rainbow 3 normal;</code></p><p><img src="/image/bg2014021401.png" alt="推荐使用normal,reverse,其他支持不佳"></p><h3 id="animation的各项属性"><a href="#animation的各项属性" class="headerlink" title="animation的各项属性"></a>animation的各项属性</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">div:hover &#123;</span><br><span class="line">  animation: 1s 1s rainbow linear 3 forwards normal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">div:hover &#123;</span><br><span class="line">  animation-name: rainbow;</span><br><span class="line">  animation-duration: 1s;</span><br><span class="line">  animation-timing-function: linear;</span><br><span class="line">  animation-delay: 1s;</span><br><span class="line">  animation-fill-mode:forwards;</span><br><span class="line">  animation-direction: normal;</span><br><span class="line">  animation-iteration-count: 3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="keyframes的写法"><a href="#keyframes的写法" class="headerlink" title="keyframes的写法"></a>keyframes的写法</h3><p>基础形式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@keyframes rainbow &#123;</span><br><span class="line">  0% &#123; background: #c00 &#125;</span><br><span class="line">  50% &#123; background: orange &#125;</span><br><span class="line">  100% &#123; background: yellowgreen &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>0% 代表 form 100% to<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@keyframes rainbow &#123;</span><br><span class="line">  from &#123; background: #c00 &#125;</span><br><span class="line">  50% &#123; background: orange &#125;</span><br><span class="line">  to &#123; background: yellowgreen &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>自动推算中间状态<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@keyframes rainbow &#123;</span><br><span class="line">  50% &#123; background: orange &#125;</span><br><span class="line">  to &#123; background: yellowgreen &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@keyframes rainbow &#123;</span><br><span class="line">  to &#123; background: yellowgreen &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>多个状态写入一行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@keyframes pound &#123;</span><br><span class="line">  from，to &#123; transform: none; &#125;</span><br><span class="line">  50% &#123; transform: scale(1.2); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="http://www.ruanyifeng.com/blog/2014/02/css_transition_and_animation.html" target="_blank" rel="noopener">CSS动画简介 (阮一峰) </a></li></ol><p>转载请说明出处 <a href="http://idcpj.github.io/2019/02/15/css3动画/">http://idcpj.github.io/2019/02/15/css3动画/</a> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;css3 的出现可以让我们不依赖 javascript 做一些相对复杂的动画&lt;br&gt;
    
    </summary>
    
      <category term="css" scheme="http://idcpj.github.io/categories/css/"/>
    
    
      <category term="css" scheme="http://idcpj.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>yaml配置文件用法</title>
    <link href="http://idcpj.github.io/2019/02/14/yaml%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%94%A8%E6%B3%95/"/>
    <id>http://idcpj.github.io/2019/02/14/yaml配置文件用法/</id>
    <published>2019-02-14T09:36:41.000Z</published>
    <updated>2019-02-14T09:40:11.208Z</updated>
    
    <content type="html"><![CDATA[<p>介绍 yaml 的一些基本用法  <a id="more"></a></p><h2 id="语法规则"><a href="#语法规则" class="headerlink" title="语法规则"></a>语法规则</h2><ul><li>大小写敏感</li><li>缩进时不允许使用Tab键，只允许使用空格。</li><li>缩进的空格数目不重要，只要相同层级的元素左侧对齐即可</li><li>表示注释，从这个字符一直到行尾，都会被解析器忽略。</li></ul><h2 id="支持数据格式"><a href="#支持数据格式" class="headerlink" title="支持数据格式"></a>支持数据格式</h2><ul><li>对象：键值对的集合，又称为映射（mapping）/ 哈希（hashes） / 字典（dictionary）</li><li>数组：一组按次序排列的值，又称为序列（sequence） / 列表（list）</li><li>纯量（scalars）：单个的、不可再分的值</li></ul><h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><p><code>animal: pets</code>  ⬇ <code>{ animal: &#39;pets&#39; }</code><br>采用行内对象<br><code>hash: { name: Steve, foo: bar }</code>  ⬇ <code>{ hash: { name: &#39;Steve&#39;, foo: &#39;bar&#39; } }</code></p><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><ol><li><p>用连线开头的表示数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- Cat</span><br><span class="line">- Dog</span><br><span class="line">- Goldfish</span><br></pre></td></tr></table></figure><p> ⬇<br><code>[ &#39;Cat&#39;, &#39;Dog&#39;, &#39;Goldfish&#39; ]</code></p></li></ol><ol start="2"><li><p>多为数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-</span><br><span class="line"> - Cat</span><br><span class="line"> - Dog</span><br><span class="line"> - Goldfish</span><br></pre></td></tr></table></figure><p>⬇<br><code>[ [ &#39;Cat&#39;, &#39;Dog&#39;, &#39;Goldfish&#39; ] ]</code></p></li></ol><ol start="3"><li>数组也可以采用行内表示法<br><code>animal: [Cat, Dog]</code><br>⬇<br><code>{ animal: [ &#39;Cat&#39;, &#39;Dog&#39; ] }</code></li></ol><h3 id="复合结构"><a href="#复合结构" class="headerlink" title="复合结构"></a>复合结构</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">languages:</span><br><span class="line"> - Ruby</span><br><span class="line"> - Perl</span><br><span class="line"> - Python </span><br><span class="line">websites:</span><br><span class="line"> YAML: yaml.org </span><br><span class="line"> Ruby: ruby-lang.org </span><br><span class="line"> Python: python.org </span><br><span class="line"> Perl: use.perl.org</span><br></pre></td></tr></table></figure><p>⬇<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">languages: [</span><br><span class="line">&apos;Ruby&apos;,</span><br><span class="line">&apos;Perl&apos;,</span><br><span class="line">&apos;Python&apos;</span><br><span class="line">],</span><br><span class="line">websites: &#123;</span><br><span class="line">YAML: &apos;yaml.org&apos;,</span><br><span class="line">Ruby: &apos;ruby-lang.org&apos;,</span><br><span class="line">Python: &apos;python.org&apos;,</span><br><span class="line">Perl: &apos;use.perl.org&apos;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="纯量"><a href="#纯量" class="headerlink" title="纯量"></a>纯量</h2><p>不可再分的元素</p><ul><li>字符串</li><li>布尔值  <code>isSet: true</code>  -&gt; js <code>{isSet: true}</code></li><li>整数</li><li>浮点数   <code>number: 12.30</code>  -&gt;js <code>{number:12.30}</code></li><li>Null    <code>parent: ~</code>  -&gt; <code>{parent:null}</code></li><li>时间 <code>iso8601: 2001-12-14t21:59:43.10-05:00</code>  -&gt;js <code>{ iso8601: new Date(&#39;2001-12-14t21:59:43.10-05:00&#39;) }</code></li><li>日期  <code>date: 1976-07-31</code> -&gt; js <code>{ date: new Date(&#39;1976-07-31&#39;) }</code></li></ul><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><ol><li>双引号不会对特殊字符转义<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s1: &apos;内容\n字符串&apos;</span><br><span class="line">s2: &quot;内容\n字符串&quot;</span><br></pre></td></tr></table></figure></li></ol><p>⬇<br><code>{ s1: &#39;内容\\n字符串&#39;, s2: &#39;内容\n字符串&#39; }</code></p><ol start="2"><li>字符串可以写成多行，从第二行开始，必须有一个单空格缩进。换行符会被转为空格<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">str: 这是一段</span><br><span class="line">  多行</span><br><span class="line">  字符串</span><br></pre></td></tr></table></figure></li></ol><p>⬇<br><code>{ str: &#39;这是一段 多行 字符串&#39; }</code></p><ol start="3"><li>多行字符串可以使用|保留换行符，也可以使用&gt;折叠换行<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">this: |</span><br><span class="line">  Foo</span><br><span class="line">  Bar</span><br><span class="line">that: &gt;</span><br><span class="line">  Foo</span><br><span class="line">  Bar</span><br></pre></td></tr></table></figure></li></ol><p>⬇<br><code>{ this: &#39;Foo\nBar\n&#39;, that: &#39;Foo Bar\n&#39; }</code></p><ol start="4"><li>+表示保留文字块末尾的换行，-表示删除字符串末尾的换行<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">s1: |</span><br><span class="line">  Foo</span><br><span class="line">s2: |+</span><br><span class="line">  Foo</span><br><span class="line">s3: |-</span><br><span class="line">  Fo</span><br></pre></td></tr></table></figure></li></ol><p>⬇<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; s1: &apos;Foo\n&apos;, s2: &apos;Foo\n\n\n&apos;, s3: &apos;Foo&apos; &#125;</span><br></pre></td></tr></table></figure></p><h3 id="强制转换数据类型"><a href="#强制转换数据类型" class="headerlink" title="强制转换数据类型"></a>强制转换数据类型</h3><p>使用两个 <code>!!</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">e: !!str 123</span><br><span class="line">f: !!str true</span><br></pre></td></tr></table></figure></p><p>⬇<br><code>{e:&quot;123&quot;,f:&quot;true&quot;}</code></p><p>转载请说明出处 <a href="http://idcpj.github.io/2019/02/14/yaml配置文件用法/">http://idcpj.github.io/2019/02/14/yaml配置文件用法/</a> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;介绍 yaml 的一些基本用法
    
    </summary>
    
      <category term="技术" scheme="http://idcpj.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="yaml" scheme="http://idcpj.github.io/tags/yaml/"/>
    
  </entry>
  
  <entry>
    <title>如何写一篇hexo的文章</title>
    <link href="http://idcpj.github.io/2019/02/13/%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E7%AF%87hexo%E7%9A%84%E6%96%87%E7%AB%A0/"/>
    <id>http://idcpj.github.io/2019/02/13/如何写一篇hexo的文章/</id>
    <published>2019-02-13T02:37:16.000Z</published>
    <updated>2019-02-15T06:19:30.772Z</updated>
    
    <content type="html"><![CDATA[<p>介绍如何用 markdown 的语法结合 hexo 的标签 写文章<br><a id="more"></a></p><h3 id="文章截断"><a href="#文章截断" class="headerlink" title="文章截断"></a>文章截断</h3><p>在需要截断的地方使用<code>&lt;!--more--&gt;</code></p><h3 id="创建hexo的"><a href="#创建hexo的" class="headerlink" title="创建hexo的"></a>创建hexo的</h3><p><code>hexo new [post] 文章标题</code></p><h3 id="设置Front-matter"><a href="#设置Front-matter" class="headerlink" title="设置Front-matter"></a>设置Front-matter</h3><p>在文章的 <code>---</code> 分割的区域就是 Front-matter</p><h3 id="可设置如下参数"><a href="#可设置如下参数" class="headerlink" title="可设置如下参数"></a>可设置如下参数</h3><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>layout</td><td>布局</td><td></td></tr><tr><td>title</td><td>标题</td><td></td></tr><tr><td>date</td><td>建立日期</td><td>文件建立日期</td></tr><tr><td>updated</td><td>更新日期</td><td>文件更新日期</td></tr><tr><td>comments</td><td>开启文章的评论功能</td><td>true</td></tr><tr><td>tags</td><td>标签</td><td>（不适用于分页）</td></tr><tr><td>categories</td><td>分类</td><td>（不适用于分页）</td></tr><tr><td>permalink</td><td>覆盖文章网址</td><td></td></tr><tr><td>donate</td><td>开启打赏</td></tr></tbody></table><h3 id="分类和标签"><a href="#分类和标签" class="headerlink" title="分类和标签"></a>分类和标签</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">- Diary</span><br><span class="line">tags:</span><br><span class="line">- PS3</span><br><span class="line">- Games</span><br></pre></td></tr></table></figure><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote Seth Godin  %&#125;</span><br><span class="line">Every interaction is both precious and an opportunity to delight.</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><p>显示:<br><blockquote><p>Every interaction is both precious and an opportunity to delight.</p><footer><strong>Seth Godin</strong></footer></blockquote></p><h3 id="函数演示"><a href="#函数演示" class="headerlink" title="函数演示"></a>函数演示</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123; % codeblock Array.map %&#125;</span><br><span class="line">array.map(callback[, thisArg])</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><p>显示:<br><figure class="highlight plain"><figcaption><span>Array.map</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array.map(callback[, thisArg])</span><br></pre></td></tr></table></figure></p><h3 id="iframe"><a href="#iframe" class="headerlink" title="iframe"></a>iframe</h3><p><code>{ % iframe url [width] [height] % }</code></p><h3 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h3><p><code>{ % img [class names] /path/to/image [width] [height] [title text [alt text]] %}</code></p><img src="/image/demo.png" width="76" height="66" title="底部图片描述 alt文字描述"><h3 id="镶嵌运行代码"><a href="#镶嵌运行代码" class="headerlink" title="镶嵌运行代码"></a>镶嵌运行代码</h3><p>推荐网站 <a href="https://jsrun.net/" target="_blank" rel="noopener">jsrun</a></p><p>方式1:<br><code>{ % iframe //jsrun.net/8XXKp/embedded/all/light/  %}</code><br><iframe src="//jsrun.net/8XXKp/embedded/all/light/" width="100%" height="300" frameborder="0" allowfullscreen></iframe></p><p>方式2:<br><code>&lt;script async src=&quot;//jsrun.net/9XXKp/embed/all/light/&quot;&gt;&lt;/script&gt;</code></p><script async src="//jsrun.net/9XXKp/embed/all/light/"></script><h3 id="直接插入-HTML-标签"><a href="#直接插入-HTML-标签" class="headerlink" title="直接插入 HTML 标签"></a>直接插入 HTML 标签</h3><p><code>&lt;b&gt;b&lt;b&gt;</code><br><b>b<b></b></b></p><h3 id="参考资料的书写方式"><a href="#参考资料的书写方式" class="headerlink" title="参考资料的书写方式"></a>参考资料的书写方式</h3><p><code>1.[doc name   (英文)](http://www.demo.com)</code><br>eg:     1. <a href="https://zh.wikipedia.org/wiki/%E8%BD%BB%E5%9E%8B%E7%9B%AE%E5%BD%95%E8%AE%BF%E9%97%AE%E5%8D%8F%E8%AE%AE" target="_blank" rel="noopener">LDAP 轻型目录访问协议 wiki (英文文)</a></p><p>转载请说明出处 <a href="http://idcpj.github.io/2019/02/13/如何写一篇hexo的文章/">http://idcpj.github.io/2019/02/13/如何写一篇hexo的文章/</a> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;介绍如何用 markdown 的语法结合 hexo 的标签 写文章&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://idcpj.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="markdown" scheme="http://idcpj.github.io/tags/markdown/"/>
    
  </entry>
  
</feed>
